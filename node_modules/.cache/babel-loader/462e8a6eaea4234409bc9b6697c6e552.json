{"ast":null,"code":"var _jsxFileName = \"/home/tomoyuch/tomoyuch.github.io/src/App.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { css } from '@emotion/core';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nexport default class App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(JBake, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }\n    }));\n  }\n\n}\n\nclass JBake extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      JBakingGluten: 0.118,\n      JAllGluten: 0.078,\n      ABakingGluten: 0.127,\n      AAllGluten: 0.105,\n      JBaking: '',\n      JAll: '',\n      Quantity: '',\n      OriginalQuantity: '',\n      TotalGlutenBaking: '',\n      TotalGlutenAll: '',\n      TotalGluten: '',\n      UchidaQuantity: '',\n      Difference: '',\n      TotalConvertedGluten: '',\n      AtotalFlowerGluten: '',\n      CalculatedBflour: '',\n      CalculatedAflour: '',\n      Gruten: ''\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange1(event) {\n    this.setState({\n      JBaking: event.target.value\n    });\n  }\n\n  handleChange2(event) {\n    this.setState({\n      JAll: event.target.value\n    });\n  }\n\n  handleChange3(event) {\n    this.setState({\n      Quantity: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      loading: true\n    });\n    const originalQuantity = Number(this.state.JBaking) + Number(this.state.JAll);\n    const totalGlutenBaking = Number(this.state.JBaking) * this.state.JBakingGluten;\n    const totalGlutenAll = Number(this.state.JAll) * this.state.JAllGluten;\n    const totalGluten = totalGlutenBaking + totalGlutenAll;\n    const uchidaQuantity = Number(this.state.Quantity);\n    const difference = uchidaQuantity / originalQuantity;\n    const totalConvertedGluten = totalGluten * difference;\n    const atotalFlowerGluten = Number(uchidaQuantity) * this.state.AAllGluten;\n    if (atotalFlowerGluten > totalConvertedGluten) return alert(\"Use All Purpose: \" + uchidaQuantity);\n    this.setState({\n      OriginalQuantity: originalQuantity\n    });\n    this.setState({\n      TotalGlutenBaking: totalGlutenBaking\n    });\n    this.setState({\n      TotalGlutenAll: totalGlutenAll\n    });\n    this.setState({\n      TotalGluten: totalGluten\n    });\n    this.setState({\n      UchidaQuantity: uchidaQuantity\n    });\n    this.setState({\n      Difference: difference\n    });\n    this.setState({\n      TotalConvertedGluten: totalConvertedGluten\n    });\n    this.setState({\n      AtotalFlowerGluten: atotalFlowerGluten\n    });\n    let i = 0;\n    let goalQuantity = uchidaQuantity;\n    let gruten = 0;\n\n    while (gruten < totalConvertedGluten) {\n      gruten = (goalQuantity - i) * this.state.AAllGluten + i * this.state.ABakingGluten;\n      i++;\n    }\n\n    this.setState({\n      CalculatedBflour: goalQuantity - i\n    });\n    this.setState({\n      CalculatedAflour: i\n    });\n    this.setState({\n      Gruten: gruten\n    });\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    }, 1000);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, \"\\u30D1\\u30F3\\u7B97\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"enterFlourInfo\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"\\u65E5\\u672C\\u30EC\\u30B7\\u30D4\\u306E\\u5F37\\u529B\\u7C89\"), /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"lg\",\n      type: \"number\",\n      placeholder: \"grams\",\n      value: this.state.JBaking,\n      onChange: this.handleChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"\\u65E5\\u672C\\u30EC\\u30B7\\u30D4\\u306E\\u4E2D\\u529B\\u7C89\"), /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"lg\",\n      type: \"number\",\n      placeholder: \"grams\",\n      value: this.state.JAll,\n      onChange: this.handleChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"\\u30A2\\u30E1\\u30EA\\u30AB\\u7C89\\u3067\\u4ECA\\u56DE\\u4F7F\\u7528\\u3057\\u305F\\u3044\\u7DCF\\u91CF\"), /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"lg\",\n      type: \"number\",\n      placeholder: \"grams\",\n      value: this.state.Quantity,\n      onChange: this.handleChange3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"\\u8A08\\u7B97\"), /*#__PURE__*/React.createElement(BeatLoader, {\n      css: override,\n      size: 15,\n      color: \"#123abc\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"\\u6CE8\\u610F\\uFF1A\\u3059\\u3079\\u3066\\u534A\\u89D2\\u3067\\u5165\\u529B\\u3059\\u308B\\u4E8B\"))), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"\\u65E5\\u672C\\u30EC\\u30B7\\u30D4\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"\\u5F37\\u529B\\u7C89\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, this.state.JBaking, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, \"\\u5C0F\\u9EA6\\u7C89\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, this.state.JAll, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"\\u7DCF\\u5206\\u91CF\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, this.state.OriginalQuantity, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"\\u5F37\\u529B\\u7C89\\u30B0\\u30EB\\u30C6\\u30F3\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.TotalGlutenBaking), \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, \"\\u4E2D\\u529B\\u7C89\\u30B0\\u30EB\\u30C6\\u30F3\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.TotalGlutenAll), \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"\\u30B0\\u30EB\\u30C6\\u30F3\\u542B\\u6709\\u91CF\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.TotalGluten), \"g\")))), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, \"\\u30A2\\u30E1\\u30EA\\u30AB\\u30FB\\u30EC\\u30B7\\u30D4\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \"\\u7DCF\\u5206\\u91CF\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, this.state.UchidaQuantity, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"\\u5206\\u91CF\\u5DEE\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.Difference * 100) / 100, \"\\u500D\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \"\\u76EE\\u6A19\\u30B0\\u30EB\\u30C6\\u30F3\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.TotalConvertedGluten), \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, \"\\u5FC5\\u8981\\u306ABaking Flour\\u5206\\u91CF:\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, this.state.CalculatedBflour, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, \"\\u5FC5\\u8981\\u306AAll Purpose Flour\\u91CF\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, this.state.CalculatedAflour, \"g\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, \"\\u5B9F\\u969B\\u306E\\u30B0\\u30EB\\u30C6\\u30F3\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, Math.round(this.state.Gruten), \"g\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/tomoyuch/tomoyuch.github.io/src/App.js"],"names":["React","Component","Form","Button","Table","css","BeatLoader","override","App","render","JBake","constructor","props","state","loading","JBakingGluten","JAllGluten","ABakingGluten","AAllGluten","JBaking","JAll","Quantity","OriginalQuantity","TotalGlutenBaking","TotalGlutenAll","TotalGluten","UchidaQuantity","Difference","TotalConvertedGluten","AtotalFlowerGluten","CalculatedBflour","CalculatedAflour","Gruten","handleChange1","bind","handleChange2","handleChange3","handleSubmit","event","setState","target","value","originalQuantity","Number","totalGlutenBaking","totalGlutenAll","totalGluten","uchidaQuantity","difference","totalConvertedGluten","atotalFlowerGluten","alert","i","goalQuantity","gruten","setTimeout","preventDefault","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { css } from '@emotion/core';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default class App extends Component {\n  render(){\n     return(\n          <div>\n             {/*other code*/}\n             <JBake />             \n          </div>\n     )\n  }\n}\n\nclass JBake extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      JBakingGluten: 0.118,\n      JAllGluten: 0.078,      \n      ABakingGluten: 0.127,\n      AAllGluten: 0.105,\n      JBaking: '',\n      JAll: '',\n      Quantity: '',\n      OriginalQuantity: '',\n      TotalGlutenBaking: '',\n      TotalGlutenAll: '',\n      TotalGluten: '',\n      UchidaQuantity: '',\n      Difference: '',\n      TotalConvertedGluten: '',\n      AtotalFlowerGluten: '',\n      CalculatedBflour: '',\n      CalculatedAflour: '',\n      Gruten: ''\n    };\n\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n \n handleChange1(event) {\n  this.setState({JBaking: event.target.value});\n}\n \n handleChange2(event) {\n  this.setState({JAll: event.target.value});\n}\n\nhandleChange3(event) {\n  this.setState({Quantity: event.target.value});\n}\n\nhandleSubmit(event) {\n\n  this.setState({loading: true});\n\n  const originalQuantity = Number(this.state.JBaking) + Number(this.state.JAll);  \n  const totalGlutenBaking = Number(this.state.JBaking)*this.state.JBakingGluten\n  const totalGlutenAll = Number(this.state.JAll)*this.state.JAllGluten;\n  const totalGluten = totalGlutenBaking + totalGlutenAll;\n  const uchidaQuantity = Number(this.state.Quantity);\n  const difference = uchidaQuantity/originalQuantity\n  const totalConvertedGluten = totalGluten*difference;\n  const atotalFlowerGluten = Number(uchidaQuantity)*this.state.AAllGluten;\n  \n  if(atotalFlowerGluten>totalConvertedGluten)return(alert(\"Use All Purpose: \" + uchidaQuantity));\n  \n  this.setState({OriginalQuantity: originalQuantity});\n  this.setState({TotalGlutenBaking: totalGlutenBaking});\n  this.setState({TotalGlutenAll: totalGlutenAll});\n  this.setState({TotalGluten: totalGluten});\n  this.setState({UchidaQuantity: uchidaQuantity});\n  this.setState({Difference: difference});\n  this.setState({TotalConvertedGluten: totalConvertedGluten});\n  this.setState({AtotalFlowerGluten: atotalFlowerGluten});\n\n  let i = 0;\n  let goalQuantity = uchidaQuantity;\n  let gruten = 0;\n\n  while (gruten<totalConvertedGluten) {\n    gruten = (goalQuantity-i)*this.state.AAllGluten + i*this.state.ABakingGluten;\n    i++;\n  }\n\n  this.setState({CalculatedBflour: goalQuantity-i});\n  this.setState({CalculatedAflour: i});\n  this.setState({Gruten: gruten});\n\n  \n  setTimeout(() => {  this.setState({loading: false}); }, 1000);\n  event.preventDefault();\n}\n\n render() {\n   return( \n    <div> \n      <h1>パン算</h1>\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group controlId=\"enterFlourInfo\" onSubmit={this.handleSubmit}>\n          <Form.Label>日本レシピの強力粉</Form.Label>\n          <Form.Control size=\"lg\"　type=\"number\" placeholder=\"grams\" \n          value={this.state.JBaking}\n          onChange={this.handleChange1}\n          />\n\n          <Form.Label>日本レシピの中力粉</Form.Label>\n          <Form.Control size=\"lg\" type=\"number\" placeholder=\"grams\" \n          value={this.state.JAll}\n          onChange={this.handleChange2}\n          />\n\n          <Form.Label>アメリカ粉で今回使用したい総量</Form.Label>\n          <Form.Control size=\"lg\" type=\"number\" placeholder=\"grams\" \n          value={this.state.Quantity}\n          onChange={this.handleChange3}\n          />\n\n          <Button size=\"lg\" variant=\"primary\" type=\"submit\" className=\"m-3\">\n          計算          \n          </Button>\n          <BeatLoader\n          css={override}\n          size={15}\n          color={\"#123abc\"}\n          loading={this.state.loading}\n          />\n          <Form.Text className=\"text-muted\">\n          注意：すべて半角で入力する事\n          </Form.Text>          \n        </Form.Group>\n      </Form>\n\n      <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>日本レシピ</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>強力粉</td>\n          <td>{this.state.JBaking}g</td>\n        </tr>\n        <tr>\n          <td>小麦粉</td>\n          <td>{this.state.JAll}g</td>\n        </tr>\n        <tr>\n          <td>総分量</td>\n          <td>{this.state.OriginalQuantity}g</td>\n        </tr>\n        <tr>\n          <td>強力粉グルテン</td>\n          <td>{Math.round(this.state.TotalGlutenBaking)}g</td>\n        </tr>\n        <tr>\n          <td>中力粉グルテン</td>\n          <td>{Math.round(this.state.TotalGlutenAll)}g</td>\n        </tr>\n        <tr>\n          <td>グルテン含有量</td>\n          <td>{Math.round(this.state.TotalGluten)}g</td>\n        </tr>                          \n      </tbody>\n    </Table>\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>アメリカ・レシピ</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>総分量</td>\n          <td>{this.state.UchidaQuantity}g</td>\n        </tr>\n        <tr>\n          <td>分量差</td>\n          <td>{Math.round(this.state.Difference*100)/100}倍</td>\n        </tr>\n        <tr>\n          <td>目標グルテン</td>\n          <td>{Math.round(this.state.TotalConvertedGluten)}g</td>\n        </tr>\n        <tr>\n          <td>必要なBaking Flour分量:</td>\n          <td>{this.state.CalculatedBflour}g</td>\n        </tr>\n        <tr>\n          <td>必要なAll Purpose Flour量</td>\n          <td>{this.state.CalculatedAflour}g</td>\n        </tr>\n        <tr>\n          <td>実際のグルテン</td>\n          <td>{Math.round(this.state.Gruten)}g</td>\n        </tr>                                   \n      </tbody>\n    </Table>\n    </div>\n    );\n }\n}"]},"metadata":{},"sourceType":"module"}